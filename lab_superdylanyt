#!/bin/bash
clear
case "$1" in
	  start)
	   echo " [+] Iniciando Sistema "
            ;;

          update)
             curl --progress-bar -L --fail --retry 4 -O  https://raw.githubusercontent.com/dylan14567/lab_superdylanyt/master/update-lab_superdylanyt
             chmod +x update-lab_superdylanyt
             ./update-lab_superdylanyt
             clear
             exit
           ;;
        
	*)
	    echo $"Usage: $0 {start|update}"
	    exit 2
	    ;;
esac
setterm -foreground green
menu()
{
clear
echo -e "\n\e[93m@lab_superdylanyt\n"
echo -e "\n\e[5;97m   1- Instalar Banner en Termux"
echo -e "\e[5;96m   2- Instalar Root en Termux"
echo -e "\e[5;94m   3- Crear Servidor SSH en Termux"
echo -e "\e[5;95m   4- Iniciar Htop"
echo -e "\e[5;93m   5- Crear Servidor WEB en Termux"
echo -e "\e[5;92m   6- Instalar xfce4-terminal en TermuxAlpine"
echo -e "\e[5;97m   7- Instalar Ubuntu en Termux"
echo -e "\e[5;96m   8- Instalar Alpine Linux en Termux"
echo -e "\e[5;94m   9- Instalar w3m en Termux"
echo -e "\e[5;95m   10- Instalar Arch Linux en Termux"
echo -e "\e[5;93m   11- Crear Servidor FTP en Termux"
echo -e "\e[5;92m   12- Iniciar Servidor FTP en Termux"
echo -e "\e[5;97m   13- Instalar Neofetch en Termux"
echo -e "\e[5;96m   14- Instalar Xfce4 en TermuxUbuntu"
echo -e "\e[5;94m   15- Instalar VPN en Termux"
echo -e "\e[5;95m   16- Crear Servidor WEB en TermuxUbuntu"
echo -e "\e[5;93m   17- Instalar SSHPLUS MANAGER FREE"
echo -e "\e[5;92m   18- Instalar buildAPKs en Termux"
echo -e "\e[5;97m   19- Instalar wiki-termux"
echo -e "\e[5;96m   20- Información del sistema - Termux"
echo -e "\e[5;94m   21- Crear copia de seguridad en Termux"
echo -e "\e[5;95m   22- Restaurar el sistema Termux"
echo -e "\e[5;93m   23- Instalar Termux Style"
echo -e "\e[5;92m   24- Instalar Termux Recursos"
echo -e "\e[5;97m   25- Instalar Java en TermuxUbuntu"
echo -e "\e[5;96m   26- Instalar Termux Apktool"
echo -e "\e[5;94m   27- Instalar Jupyter Notebook en TermuxUbuntu"
echo -e "\e[5;95m   28- Iniciar Jupyter Notebook en LAN"
echo -e "\e[5;93m   29- Salir"
echo -e -n "\e[5;92m \n >>>  "
read res
case $res in
"1")
clear
echo -e "\e[5;36m [+] Instalando Banner en Termux "
pkg update && pkg upgrade -y
pkg install wget -y
pkg install vim -y
pkg install neofetch -y
cd $PREFIX/etc;ls
rm motd
rm bash.bashrc
bin=bash.bashrc
cat > $bin <<- EOM
command_not_found_handle() {
        /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"
}

setterm -foreground green
clear
neofetch  
setterm -foreground green
PS1='\033[1;92m\u\[@localhost[\033[1;93m\W\033[1;92m]:\$ \033[1;97m'

EOM

cd $HOME
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\n\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"2")
clear
echo -e "\e[5;36m [+] Instalando Root en Termux "
pkg update && pkg upgrade
clear
pkg install root-repo -y
pkg install figlet -y
pkg install unstable-repo -y
clear
setterm -foreground green
pkg install proot -y
pkg install vim -y
pkg install wget -y
pkg install tsu -y && hash -r
clear
cd $PREFIX/bin
bin=startroot
cat > $bin <<- EOM
#!/bin/bash
setterm -foreground green
clear
#bash.bashrc
proot -0 -w ~ $PREFIX/bin/bash
EOM

termux-fix-shebang $bin
chmod +x $bin
cd $HOME
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"3")
clear
echo -e "\e[5;36m [+] Creando Servidor SSH "
pkg install openssh -y
pkg install nmap -y
pkg install net-tools -y
pkg install procps -y
nmap localhost
sshd
nmap localhost
echo -e "\e[5;36m [+] Copia el puerto y pegalo aquí, luego pulsa ENTER "
read port
whoami
echo -e "\e[5;36m [+] Copia tu nombre de usuario y pegalo aquí, luego pulsa ENTER "
read user
clear
passwd $user
ifconfig wlan0
echo -e "\e[5;36m [+] Copia la dirección IP y pegalo aquí, luego pulsa ENTER "
read ip
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;92m Copia este comando y ejecutalo en cualquier terminal para acceder al server ssh "
echo -e "\e[5;92m ssh $user@$ip -p $port "
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"4")
clear
htop
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"5")
clear
echo -e "\e[5;36m [+] Creando un Servidor WEB en Termux "
pkg update && pkg upgrade
pkg install php-apache -y
pkg install mariadb -y
pkg install vim -y
pkg install net-tools -y
pkg install procps -y
clear
cd $PREFIX/share/apache2/default-site/htdocs;ls
rm -rf index.html
bin=index.html
cat > $bin <<- EOM
<!DOCTYPE html
<html>
<head>
      <title> Web server </title>
</head>
<body>
     <h1> It works! </h1><br />
     <br />
     <p> This is the default web page for this server. </p>
     <p> Visit apache page for more information: <a href="https://httpd.apache.org/">https://httpd.apache.org/</a></p>
     <p> Look at the information of your web server <a href="info.php">here</a></p>
<body>
</html>       
EOM

echo '<?php phpinfo();'> info.php
cd $HOME
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"6")
clear
echo -e "\e[5;36m [+] Instalando xfce4-terminal en TermuxAlpine "
apk update
apk upgrade
apk add xvfb openbox xfce4-terminal x11vnc
apk add xfce4
clear
Xvfb :1 -screen 0 1920x1080x24 &
x11vnc -xkb -noxrecord -noxfixes -noxdamage -display :1 -nopw -wait 5 -shared -permitfiletransfer -tightfilexfer -noshm &
DISPLAY=:1 openbox &
DISPLAY=:1 xfce4-terminal &
echo -e "\e[5;96m Pulsa ENTER para salir de aqui "
read ENTER
setterm -foreground white
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"7")
clear
echo -e "\e[5;36m [+] Instalando Ubuntu en Termux "
pkg update && pkg upgrade
pkg install wget openssl-tool proot -y && hash -r && wget -c --quiet --show-progress https://raw.githubusercontent.com/dylan14567/lab_superdylanyt/master/Server/ubuntu.sh && bash ubuntu.sh 
clear
cd $HOME
rm -rf ubuntu.sh
cd $PREFIX/bin
ubuntu=startubuntu
cat > $ubuntu <<- EOM
clear
cd $PREFIX/share/Ubuntu
./start-ubuntu.sh
EOM

termux-fix-shebang $ubuntu
chmod +x $ubuntu
cd $HOME
clear
echo " Ejecuta ${ubuntu} para iniciar Ubuntu "
echo " Pulsa ENTER para salir de aquí "
read ENTER
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"8")
clear
echo -e "\e[5;36m [+] Instalando Alpine en Termux "
cd $HOME
pkg install wget openssl-tool proot -y && hash -r && wget -c --quiet --show-progress https://raw.githubusercontent.com/Hax4us/TermuxAlpine/master/TermuxAlpine.sh && bash TermuxAlpine.sh
rm -rf TermuxAlpine.sh
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"9")
clear
echo -e "\e[5;36m [+] Instalando w3m en Termux "
pkg update && pkg upgrade
pkg install w3m -y
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"10")
clear
echo -e "\e[5;36m [+] Instalando Arch Linux en Termux "
cd $HOME
pkg update && pkg upgrade
pkg install git -y
pkg install proot -y
git clone https://github.com/termux/proot-distro
cd $HOME/proot-distro
chmod +x *;ls
./install.sh
cd $HOME
rm -rf proot-distro
clear
cd $PREFIX/etc/proot-distro
wget -c --quiet --show-progress https://raw.githubusercontent.com/dylan14567/lab_superdylanyt/master/Server/arch.sh
chmod +x arch.sh
cd $HOME
clear
pkg install wget openssl-tool proot -y && hash -r && proot-distro install arch
clear
cd $PREFIX/bin
bin=startarch
cat > $bin <<- EOM
clear
proot-distro login arch
EOM

termux-fix-shebang $bin
chmod +x $bin
clear
cd $HOME
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo " Ejecuta ${bin} para iniciar Arch Linux "
echo " Pulsa ENTER para salir de aquí "
read ENTER
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"11")
clear
echo -e "\e[5;36m [+] Creando Servidor FTP en Termux "
pkg install busybox termux-services -y
pkg install net-tools -y
pkg install procps -y
cd $HOME
source $PREFIX/etc/profile.d/start-services.sh
sv-enable ftpd
clear
mkdir $PREFIX/share/Servidor_FTP
cd $PREFIX/share/Servidor_FTP
bin=README.md
cat > $bin <<- EOM
# It Works 
Thanks for creating the ftp server with lab_superdylanyt system
EOM

clear
cd $HOME
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Ingresa al menu y escribe 12 para iniciar el servidor FTP "
echo -e "\e[5;96m Pulsa ENTER para salir de aqui "
read ENTER
setterm -foreground white
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"12")
clear
echo -e "\e[5;36m [+] Iniciando Servidor FTP "
cd $PREFIX/share/Servidor_FTP
clear
ifconfig wlan0
echo -e "\e[5;92m Copia la dirección IP y pegalo aquí, luego pulsa ENTER "
read ip
clear
tcpsvd -vE $ip 1024 ftpd
cd $HOME
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"13")
clear
echo -e "\e[5;36m [+] Instalando neofetch en Termux "
pkg update && pkg upgrade
pkg install neofetch -y
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"14")
clear
echo -e "\e[5;36m [+] Instalando xfce4 en Ubuntu "
apt-get update -y && apt-get upgrade -y
apt-get install sudo -y
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get install xfce4 xfce4-terminal tightvncserver -y
sudo apt-get install xfe -y
sudo apt-get clean
mkdir ~/.vnc
cd ~/.vnc
bin=xstartup
cat > $bin <<- EOM
#!/bin/bash
xrdb $HOME/.Xresources
startxfce4 &

EOM

chmod +x $bin
cd /usr/local/bin/
bin2=vncserver-start
cat > $bin2 <<- EOM
export USER=root
export HOME=/root

vncserver -geometry 1024x768 -depth 24 -name remote-desktop :1

EOM

chmod +x $bin2
bin3=vncserver-stop
cat > $bin3 <<- EOM
export USER=root
export HOME=/root

vncserver -kill :1
rm -rf /tmp/.X1-lock
rm -rf /tmp/.X11-unix/X1

EOM

chmod +x $bin3
cd --
clear
echo "export DISPLAY=":1"" >> /etc/profile
source /etc/profile
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
vncserver-start
echo " Usa ${bin2} para iniciar el Servidor VNC "
echo " Usa ${bin3} para detener el Servidor VNC "
echo " El Servidor VNC esta activo en localhost:1 "
echo " Pulsa ENTER para salir de aqui "
read ENTER
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"15")
clear
echo -e "\e[5;36m [+] Instalando VPN en Termux "
pkg update -y && pkg upgrade -y
pkg install tor -y
pkg install proxychains-ng -y
pkg install net-tools -y
pkg install procps -y
cd $PREFIX/bin
bin=startvpn
cat > $bin <<- EOM
proxychains4 clear
proxychains4 bash

EOM

termux-fix-shebang $bin
chmod +x $bin
clear
cd $HOME
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo " Antes de inciar la VPN debes, estar conectado a la red Tor "
echo " Para conectarte a la Red Tor debes ejecutar el comando tor "
echo " Una vez conectado a la Red Tor debes iniciar la VPN ejecutando el comando ${bin} "
echo " Pulsa ENTER para salir de aqui "
read ENTER
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"16")
clear
echo -e "\e[5;36m [+] Creando Servidor WEB en Ubuntu "
apt-get update -y && apt-get upgrade -y
apt-get install sudo -y
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get install apache2 php -y
sudo apt-get install neovim -y
sudo apt-get install net-tools -y
clear
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"17")
clear
cd $HOME
echo -e "\e[5;36m [+] Instalando SSHPLUS MANAGER FREE "
curl --progress-bar -L --fail --retry 4 -O https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/SSHPLUS-MANAGER-FREE/master/Plus
chmod +x Plus
clear
./Plus
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"18")
clear
echo -e "\e[5;36m [+] Instalando buildAPKs en Termux "
cd $HOME
pkg update -y && pkg upgrade -y
pkg install wget -y
pkg install git -y
pkg install curl -y
curl -O https://raw.githubusercontent.com/BuildAPKs/buildAPKs/master/setup.buildAPKs.bash
bash setup.buildAPKs.bash
clear
cd $HOME
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"19")
clear
echo -e "\e[5;36m [+] Instalando wiki-termux "
cd $HOME
pkg update -y && pkg upgrade -y
pkg install wget -y
pkg install git -y
pkg install python -y
git clone https://github.com/DeepSociety/wiki-termux.git
cd $HOME/wiki-termux
chmod +x *;ls
clear
./wiki
clear
cd $HOME
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"20")
clear
echo -e "\e[5;36m Arquitectura de la máquina: "
setterm -foreground white
uname -m
echo -e "\e[5;36m Versión del kernel usado: "
setterm -foreground white
uname -r
echo -e "\e[5;36m Información del CPU: "
setterm -foreground white
cat /proc/cpuinfo
echo -e "\e[5;36m Interrupciones: "
setterm -foreground white
cat /proc/interrupts
echo -e "\e[5;36m Uso de memoria: "
setterm -foreground white
cat /proc/meminfo
echo -e "\e[5;36m Ficheros swap: "
setterm -foreground white
cat /proc/swaps
echo -e "\e[5;36m Adaptadores de red y estadísticas: "
setterm -foreground white
cat /proc/net/dev
echo -e "\e[5;36m Sistema de ficheros montado: "
setterm -foreground white
cat /proc/mounts
echo -e "\e[5;36m Dispositivos PCI: "
setterm -foreground white
lspci -tv
echo -e "\e[5;36m Dispositivos USB: "
setterm -foreground white
lsusb -tv
echo -e "\e[5;36m Fecha del sistema: "
setterm -foreground white
date
echo -e "\e[5;36m Dirección IP Pública: "
setterm -foreground white
curl https://wgetip.com -w "\n"
echo -e "\e[5;36m Dirección IP Privada: "
setterm -foreground white
ip a
echo -e "\e[5;36m Nombre de Usuario: "
setterm -foreground white
whoami
echo -e "\e[5;36m Pulsa ENTER para salir de aqui "
read ENTER
setterm -foreground white
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"21")
clear
echo -e "\e[5;36m [+] Creando copia de seguridad en Termux "
cd /data/data/com.termux/files
pkg update -y && pkg upgrade -y
pkg install tar -y
pkg install busybox -y
clear
termux-setup-storage
echo " Pulsa ENTER para continuar, Pulsa CTRL C para salir de aquí "
read ENTER
clear
tar -zcvf /sdcard/termux-backup.tar.gz home usr
clear
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"22")
clear
echo -e "\e[5;36m [+] Restaurando el sistema Termux "
cd $HOME
mv lab_superdylanyt /data/data/com.termux/files
cd /data/data/com.termux/files
pkg update -y && pkg upgrade -y
pkg install tar -y
pkg install busybox -y
clear
termux-setup-storage
echo " Pulsa ENTER para continuar, Pulsa CTRL C para salir de aquí "
read ENTER
clear
rm -rf home
tar -zxvf /sdcard/termux-backup.tar.gz home
cp ./usr/bin/busybox ./tar
rm -rf usr
unset LD_PRELOAD
./tar -zxvf /sdcard/termux-backup.tar.gz usr
clear
mv lab_superdylanyt $HOME
cd $HOME
clear
echo -e "\e[5;36m [+] Restauración Completada "
clear
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"23")
clear
echo -e "\e[5;36m [+] Instalando Termux Style "
cd $HOME
pkg update -y && pkg upgrade -y
pkg install wget -y
pkg install git -y
git clone https://github.com/adi1090x/termux-style
cd $HOME/termux-style
chmod +x *;ls
./install
clear
cd $HOME
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"24")
clear
echo -e "\e[5;36m [+] Instalando Termux Recursos "
cd $HOME
pkg update -y && pkg upgrade -y
pkg install wget ncurses-utils -y
wget https://raw.githubusercontent.com/barba99/recursos/master/Recursos.sh
chmod 777 Recursos.sh 
clear
bash Recursos.sh
cd $HOME
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"25")
clear
echo -e "\e[5;36m [+] Instalando Java en TermuxUbuntu "
home="--"
cd $home
apt update -y && apt upgrade -y
apt install sudo -y
sudo apt update -y && sudo apt upgrade -y
sudo apt install neovim -y
sudo apt install default-jdk -y
cd $home
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"26")
clear
echo -e "\e[5;36m [+] Instalando Termux Apktool "
cd $HOME
apt update -y && apt upgrade -y
apt install git -y
clear
git clone https://github.com/1Tech-X/Termux-Apktool
clear
cd $HOME/Termux-Apktool
apt install -y ./apktool.deb
clear
cd $HOME
rm -rf $HOME/Termux-Apktool
clear
cd $HOME
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"27")
clear
echo -e "\e[5;36m [+] Instalando Jupyter Notebook en TermuxUbuntu "
home="--"
cd $home
apt update -y && apt upgrade -y
apt install sudo -y
sudo apt update -y && sudo apt upgrade -y
sudo apt install net-tools -y
sudo apt install jupyter-notebook -y
cd $home
clear
echo -e "\e[5;36m [+] Instalación Completada "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"28")
clear
echo -e "\e[5;36m [+] Iniciar Jupyter Notebook en LAN "
home="--"
cd $home
clear
ifconfig
echo " Copia tu IP y pegala aquí "
read ip
clear
jupyter notebook --ip $ip --port 8888
cd $home
clear
echo -e "\e[5;36m [+] Finalizado "
clear
echo -e "\e[5;96m Regresar al menu s/n?"
read s
if [ "$s" = "s" ]; then 
menu
else
echo "saliendo.."
exit
fi
;;
"29")
clear
echo " [+] Saliendo..... "
echo " [+] Bye :D "
clear
exit
;;
esac
}
menu
